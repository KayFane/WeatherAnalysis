ls
ls()
path.stores.info <- sprintf("/Users/KayE/Documents/R/CT/%s/weather project - store.tab", province)
library(plyr)
province <- "BC"
#province <- "AB_BC"
path.stores.info <- sprintf("/Users/KayE/Documents/R/CT/%s/weather project - store.tab", province)
path.stores.sale <- sprintf("/Users/KayE/Documents/R/CT/%s/weather project - sales.tab", province)
path.weather <- sprintf("/Users/KayE/Documents/R/CT/%s/weather project - daily weather.tab", province)
stores.info <- read.table(path.stores.info, sep="\t", header=TRUE)
head(stores.info)
categories.sales <- read.table("/Users/KayE/Documents/R/CT/results/categories_sales.txt",header=TRUE)
categories.sales$TRANSACTION_DATE <- as.Date(categories.sales$TRANSACTION_DATE)
head(categories.sales)
sample <- categories.sales[categories.sales$TRANSACTION_DATE < as.Date('2012-02-29',"%Y-%m-%d"),]
source('~/Documents/R/WeatherAnalysis/R/transform_center_scale_caret.R')
predictors = data.frame(x1 = sample$BATTERIES_QTY,
x2 = sample$HEATING_COOLING_QTY)
p1 = ggplot(predictors) + geom_point(aes(x = x1, y = x2))
temp <- melt(predictors, measured = c("x1", "x2"))
p2 = ggplot(temp) + geom_histogram(aes(x=value)) +
facet_grid(. ~ variable, scales = "free_x")
grid.arrange(p1, p2)
require(caret)
trans <- preProcess(predictors, c("BoxCox", "center", "scale"))
predictors_trans <- data.frame(trans = predict(trans, predictors))
p1 = ggplot(predictors_trans) + geom_point(aes(x = trans.x1, y = trans.x2))
temp <- melt(predictors_trans, measured = c("trans.x1", "trans.x2"))
p2 = ggplot(temp) + geom_histogram(aes(x=value), data = temp) +
facet_grid(. ~ variable, scales = "free_x")
grid.arrange(p1, p2)
p1 = ggplot(predictors) + geom_point(aes(x = x1, y = x2))
p1 = ggplot(predictors_trans) + geom_point(aes(x = trans.x1, y = trans.x2))
temp <- melt(predictors_trans, measured = c("trans.x1", "trans.x2"))
p2 = ggplot(temp) + geom_histogram(aes(x=value), data = temp) +
facet_grid(. ~ variable, scales = "free_x")
grid.arrange(p1, p2)
predictors = data.frame(x1 = sample$BATTERIES_QTY,
x2 = sample$HEATING_COOLING_QTY)
p1 = ggplot(predictors) + geom_point(aes(x = x1, y = x2))
temp <- melt(predictors, measured = c("x1", "x2"))
p2 = ggplot(temp) + geom_histogram(aes(x=value)) +
facet_grid(. ~ variable, scales = "free_x")
grid.arrange(p1, p2)
library(caret)
trans <- preProcess(predictors, c("BoxCox", "center", "scale"))
predictors_trans <- data.frame(trans = predict(trans, predictors))
p1 = ggplot(predictors_trans) + geom_point(aes(x = trans.x1, y = trans.x2))
temp <- melt(predictors_trans, measured = c("trans.x1", "trans.x2"))
p2 = ggplot(temp) + geom_histogram(aes(x=value), data = temp) +
facet_grid(. ~ variable, scales = "free_x")
grid.arrange(p1, p2)
categories.sales <- read.table("/Users/KayE/Documents/R/CT/results/categories_sales.txt",header=TRUE)
categories.sales$TRANSACTION_DATE <- as.Date(categories.sales$TRANSACTION_DATE)
sample <- categories.sales[categories.sales$TRANSACTION_DATE < as.Date('2012-02-29',"%Y-%m-%d"),]
hist(sample$BATTERIES_QTY)
hist(categories.sales$BATTERIES_QTY)
length(unique(categories.sales$STORE_NUM)
)
pdf("test.pdf")
hist(categories.sales$BATTERIES_QTY)
dev.off
dev.off()
pdf("test.pdf")
apply(categories.sales,2,hist)
dev.off()
pdf("test.pdf")
dev.off()
head(categories.sales)
categories.sales <- categories.sales[, -5]
head( categories.sales)
categories.sales <- read.table("/Users/KayE/Documents/R/CT/results/categories_sales.txt",header=TRUE)
categories.sales$TRANSACTION_DATE <- as.Date(categories.sales$TRANSACTION_DATE)
categories.sales <- categories.sales[, -5]
str(categories.sales)
sales.with.weather <- StoresSalesWithWeather()
source('~/Documents/R/WeatherAnalysis/R/prepare_data.R')
sales.with.weather <- StoresSalesWithWeather()
warnings()
head(sales.with.weather)
length(which(is.na(sales.with.weather)))
is.na(sales.with.weather)
which(is.na(sales.with.weather))
head(sales.with.weather[which(is.na(sales.with.weather)),])
length(which(is.na(sales.with.weather)))
sales.with.weather <- sales.with.weather[-which(is.na(sales.with.weather)), ]
head(sales.with.weather)
categories.sales <- CategorizedSales()
head(categories.sales)
catesales <- CategorizedSales()
catesales <- CategorizedSales()
source('~/Documents/R/WeatherAnalysis/R/prepare_data.R')
catesales <- CategorizedSales()
head(catesales)
WriteTable <- function(data) {
path <- "/Users/KayE/Documents/R/CT/results/categories_sales_BC.txt"
write.table(data, path, sep="\t", row.names=FALSE,append = FALSE)
}
WriteTable(catesales)
categories.sales
head(categories.sales)
source('~/Documents/R/WeatherAnalysis/R/load_data.R')
sales <- read.table("/Users/KayE/Documents/R/CT/results/categories_sales_BC.txt",header=TRUE)
sales$TRANSACTION_DATE <- as.Date(sales$TRANSACTION_DATE)
head(sales)
summary(sales)
source('~/Documents/R/WeatherAnalysis/utilities.R')
WriteTable(sales[c(1:100),], "test")
source('~/Documents/R/WeatherAnalysis/R/Main.R')
WriteTable(sales[c(1:100),], "test")
file.exists(kPath)
file.exists("~/Document")
file.exists("~/Documents")
source('~/Documents/R/WeatherAnalysis/utilities.R')
CreatePath
CreatePath()
WriteTable(sales[c(1:100),], "test")
test <- ReadTable("test")
head(test)
source('~/Documents/R/WeatherAnalysis/R/Main.R')
sourceDir(./R)
sourceDir("./")
sourceDir("./R")
source('~/Documents/R/WeatherAnalysis/utilities.R')
SourceDir(./utilities)
SourceDir("uti")
SourceDir("ti")
SourceDir("eeee")
SourceDir(".")
sales <- ReadTable("categories_sales_BC.txt")
sales <- ReadTable("categories_sales_BC.txt")
SourceDir("./R")
pwd()
wd()
cwd()
pwd()
SourceDir("R")
SourceDir(".")
source("R/utilities.R")
source("R/load_data.R")
head(sales)
source('~/.active-rstudio-document', echo=TRUE)
<<>>=
summary(sales)
globalenv()
environment()
get(sales)
get("sales")
source('~/Documents/R/WeatherAnalysis/R/Main.R', echo=TRUE)
attach(sales)
environment()
attach(sales)
environment()
data(sales)
str(cars)
str(sales)
library(knitr); knit('testt.Rmd')
rmarkdown::render("testt.Rmd")
rmarkdown::render("testt.Rmd")
rmarkdown::render("t.Rmd","R")
rmarkdown::render("t.Rmd",output_dir="R")
rmarkdown::render("t.Rmd",output_dir=kPath)
source('~/Documents/R/WeatherAnalysis/R/utilities.R', echo=TRUE)
RenderPDF("t.Rmd")
RenderPDF("description_report.Rmd")
RenderPDF("R/description_report.Rmd")
